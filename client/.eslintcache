[{"/Users/alirangwala/Documents/PostHR-Projects/Decentralized-Exchange/client/src/index.js":"1","/Users/alirangwala/Documents/PostHR-Projects/Decentralized-Exchange/client/src/LoadingContainer.js":"2","/Users/alirangwala/Documents/PostHR-Projects/Decentralized-Exchange/client/src/App.js":"3","/Users/alirangwala/Documents/PostHR-Projects/Decentralized-Exchange/client/src/utils.js":"4","/Users/alirangwala/Documents/PostHR-Projects/Decentralized-Exchange/client/src/Header.js":"5","/Users/alirangwala/Documents/PostHR-Projects/Decentralized-Exchange/client/src/Dropdown.js":"6","/Users/alirangwala/Documents/PostHR-Projects/Decentralized-Exchange/client/src/Wallet.js":"7","/Users/alirangwala/Documents/PostHR-Projects/Decentralized-Exchange/client/src/NewOrder.js":"8","/Users/alirangwala/Documents/PostHR-Projects/Decentralized-Exchange/client/src/AllOrders.js":"9"},{"size":267,"mtime":1611868457824,"results":"10","hashOfConfig":"11"},{"size":978,"mtime":1611869322405,"results":"12","hashOfConfig":"11"},{"size":4397,"mtime":1611879071853,"results":"13","hashOfConfig":"11"},{"size":1152,"mtime":1611791093919,"results":"14","hashOfConfig":"11"},{"size":885,"mtime":1611798219655,"results":"15","hashOfConfig":"11"},{"size":959,"mtime":1611856285225,"results":"16","hashOfConfig":"11"},{"size":2971,"mtime":1611875388751,"results":"17","hashOfConfig":"11"},{"size":3365,"mtime":1611876846177,"results":"18","hashOfConfig":"11"},{"size":1318,"mtime":1611879101150,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1g50hmx",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/alirangwala/Documents/PostHR-Projects/Decentralized-Exchange/client/src/index.js",[],["42","43"],"/Users/alirangwala/Documents/PostHR-Projects/Decentralized-Exchange/client/src/LoadingContainer.js",[],"/Users/alirangwala/Documents/PostHR-Projects/Decentralized-Exchange/client/src/App.js",["44","45","46"],"/Users/alirangwala/Documents/PostHR-Projects/Decentralized-Exchange/client/src/utils.js",[],"/Users/alirangwala/Documents/PostHR-Projects/Decentralized-Exchange/client/src/Header.js",[],"/Users/alirangwala/Documents/PostHR-Projects/Decentralized-Exchange/client/src/Dropdown.js",["47"],"import React, { useState } from 'react';\n\nfunction Dropdown({ onSelect, activeItem, items }) {\n\n  const [dropdownVisible, setDropdownVisible] = useState(false)\n\n  const selectItem = (e, item) => {\n    e.preventDefault();\n    setDropdownVisible(!dropdownVisible);\n    onSelect(item)\n  }\n  return (\n    <div className='dropdown ml-3'>\n      <button\n        className='btn btn-secondary dropdown-toggle'\n        type='button'\n        onClick={() => setDropdownVisible(!dropdownVisible)}\n      >\n        {activeItem.label}\n      </button>\n      <div\n        className={`dropdown-menu ${dropdownVisible ? 'visible' : ''}`}>\n        {items && items.map((item, i) => (\n          <a\n            className={`dropdown-item ${item.value === activeItem.value ? 'active' : null}`}\n            href='#'\n            key={i}\n            onClick={e => selectItem(e, item.value)}\n          > {item.label}</a>\n        ))}\n\n      </div>\n    </div>\n  )\n}\n\nexport default Dropdown;","/Users/alirangwala/Documents/PostHR-Projects/Decentralized-Exchange/client/src/Wallet.js",["48"],"import React, {useState} from 'react';\nimport Dropdown from './Dropdown.js'\n\nconst DIRECTION = {\n  WITHDRAW: 'WITHDRAW',\n  DEPOSIT: 'DEPOSIT'\n}\nfunction Wallet({ deposit, withdraw, user}) {\n\nconst [direction, setDirection] = useState(DIRECTION.DEPOSIT)\nconst [amount, setAmount] = useState(0);\n\nconst onSubmit = e => {\n  e.preventDefault();\n  if(direction === DIRECTION.DEPOSIT) {\n    deposit(amount);\n  } else {\n    withdraw(amount);\n  }\n}\n  return (\n      <div id=\"wallet\" className=\"card\">\n      <h2 className=\"card-title\">Wallet</h2>\n      <h3>Token balance for {user.selectedToken.ticker}</h3>\n      <div className=\"form-group row\">\n        <label htmlFor=\"wallet\" className=\"col-sm-4 col-form-label\">Wallet</label>\n        <div className=\"col-sm-8\">\n          <input\n            className=\"form-control\"\n            id=\"wallet\"\n            disabled\n            value={user.balances.tokenWallet}\n          />\n        </div>\n      </div>\n      <div className=\"form-group row\">\n        <label htmlFor=\"contract\" className=\"col-sm-4 col-form-label\">Dex</label>\n        <div className=\"col-sm-8\">\n          <input\n            className=\"form-control\"\n            id=\"wallet\"\n            disabled\n            value={user.balances.tokenDex}\n          />\n        </div>\n      </div>\n      <h3>Transfer {user.selectedToken.ticker}</h3>\n      <form id=\"transfer\" onSubmit={(e) => onSubmit(e)}>\n        <div className=\"form-group row\">\n          <label htmlFor=\"direction\" className=\"col-sm-4 col-form-label\">Direction</label>\n          <div className=\"col-sm-8\">\n            <div id=\"direction\" className=\"btn-group\" role=\"group\">\n              <button\n                type=\"button\"\n                className={`btn btn-secondary ${direction === DIRECTION.DEPOSIT ? 'active' : ''}`}\n                onClick={() => setDirection(DIRECTION.DEPOSIT)}\n              >Deposit</button>\n              <button\n                type=\"button\"\n                className={`btn btn-secondary ${direction === DIRECTION.WITHDRAW ? 'active' : ''}`}\n                onClick={() => setDirection(DIRECTION.WITHDRAW)}\n              >Withdraw</button>\n            </div>\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label htmlFor=\"amount\" className=\"col-sm-4 col-form-label\">Amount</label>\n          <div className=\"col-sm-8\">\n            <div className=\"input-group mb-3\">\n              <input\n                id=\"amount\"\n                type=\"text\"\n                className=\"form-control\"\n                onChange={(e) => setAmount(e.target.value)}\n              />\n              <div className=\"input-group-append\">\n                <span className=\"input-group-text\">{user.selectedToken.ticker}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"text-right\">\n          <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default Wallet;","/Users/alirangwala/Documents/PostHR-Projects/Decentralized-Exchange/client/src/NewOrder.js",["49"],"import React, {useState} from 'react';\nimport Dropdown from './Dropdown.js'\n\nconst TYPE = {\n  LIMIT: 'LIMIT',\n  MARKET: 'MARKET'\n}\nconst SIDE = {\n  BUY: 0,\n  SELL: 1\n}\nfunction NewOrder({ createMarketOrder, createLimitOrder}) {\n\nconst [order, setOrder] = useState({\ntype: TYPE.LIMIT,\nside: SIDE.BUY,\namount: '',\nprice:''})\n\nconst onSubmit = e => {\n  e.preventDefault();\n  if(order.type === TYPE.MARKET) {\n    createMarketOrder(order.amount, order.side)\n  } else {\n    createLimitOrder(order.amount, order.price, order.side)\n  }\n}\n  return (\n    <div id=\"orders\" className=\"card\">\n      <h2 className=\"card-title\">New Order</h2>\n      <form onSubmit={(e) => onSubmit(e)}>\n        <div className=\"form-group row\">\n          <label htmlFor=\"type\" className=\"col-sm-4 col-form-label\">Type</label>\n          <div className=\"col-sm-8\">\n            <div id=\"type\" className=\"btn-group\" role=\"group\">\n              <button\n                type=\"button\"\n                className={`btn btn-secondary ${order.type === TYPE.LIMIT ? 'active' : ''}`}\n                onClick={() => setOrder(order => ({ ...order, type: TYPE.LIMIT}))}\n              >Limit</button>\n              <button\n                type=\"button\"\n                className={`btn btn-secondary ${order.type === TYPE.MARKET ? 'active' : ''}`}\n                onClick={() => setOrder(order => ({ ...order, type: TYPE.MARKET}))}\n              >Market</button>\n            </div>\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label htmlFor=\"side\" className=\"col-sm-4 col-form-label\">Side</label>\n          <div className=\"col-sm-8\">\n            <div id=\"side\" className=\"btn-group\" role=\"group\">\n              <button\n                type=\"button\"\n                className={`btn btn-secondary ${order.side === SIDE.BUY ? 'active' : ''}`}\n                onClick={() => setOrder(order => ({ ...order, side:  SIDE.BUY}))}\n              >Buy</button>\n              <button\n                type=\"button\"\n                className={`btn btn-secondary ${order.side === SIDE.SELL ? 'active' : ''}`}\n                onClick={() => setOrder(order => ({ ...order, side:  SIDE.SELL}))}\n              >Sell</button>\n            </div>\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-4 col-form-label\" htmlFor=\"order-amount\">Amount</label>\n          <div className=\"col-sm-8\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"order-amount\"\n              onChange={({ target: { value }}) => setOrder(order => ({ ...order, amount: value}))}\n            />\n          </div>\n        </div>\n        {order.type === TYPE.MARKET ? null :\n          <div className=\"form-group row\">\n            <label className=\"col-sm-4 col-form-label\" htmlFor=\"order-amount\">Price</label>\n            <div className=\"col-sm-8\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"order-price\"\n                onChange={({ target: { value }}) => setOrder(order => ({ ...order, price: value}))}\n              />\n            </div>\n          </div>\n        }\n        <div className=\"text-right\">\n          <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default NewOrder;","/Users/alirangwala/Documents/PostHR-Projects/Decentralized-Exchange/client/src/AllOrders.js",["50"],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":35,"column":9,"nodeType":"57","messageId":"58","endLine":35,"endColumn":15},{"ruleId":"59","severity":1,"message":"60","line":102,"column":6,"nodeType":"61","endLine":102,"endColumn":8,"suggestions":"62"},{"ruleId":"59","severity":1,"message":"63","line":115,"column":6,"nodeType":"61","endLine":115,"endColumn":26,"suggestions":"64"},{"ruleId":"65","severity":1,"message":"66","line":24,"column":11,"nodeType":"67","endLine":29,"endColumn":12},{"ruleId":"55","severity":1,"message":"68","line":2,"column":8,"nodeType":"57","messageId":"58","endLine":2,"endColumn":16},{"ruleId":"55","severity":1,"message":"68","line":2,"column":8,"nodeType":"57","messageId":"58","endLine":2,"endColumn":16},{"ruleId":"55","severity":1,"message":"69","line":1,"column":16,"nodeType":"57","messageId":"58","endLine":1,"endColumn":24},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'orders' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'accounts', 'contracts.dex.methods', 'getBalances', 'getOrders', and 'web3.utils'. Either include them or remove the dependency array. If 'setUser' needs the current value of 'accounts', you can also switch to useReducer instead of useState and read 'accounts' in the reducer.","ArrayExpression",["72"],"React Hook useEffect has missing dependencies: 'accounts', 'getBalances', and 'getOrders'. Either include them or remove the dependency array.",["73"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Dropdown' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},{"desc":"76","fix":"77"},"Update the dependencies array to be: [accounts, contracts.dex.methods, getBalances, getOrders, web3.utils]",{"range":"78","text":"79"},"Update the dependencies array to be: [accounts, getBalances, getOrders, user.selectedToken]",{"range":"80","text":"81"},[3161,3163],"[accounts, contracts.dex.methods, getBalances, getOrders, web3.utils]",[3521,3541],"[accounts, getBalances, getOrders, user.selectedToken]"]